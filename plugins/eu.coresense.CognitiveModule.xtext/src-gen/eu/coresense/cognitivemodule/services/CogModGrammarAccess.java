/*
 * generated by Xtext 2.38.0
 */
package eu.coresense.cognitivemodule.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class CogModGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class CognitiveModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.CognitiveModule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCognitiveModuleAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Keyword cCoreKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cCoreAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cCoreCoreParserRuleCall_5_0 = (RuleCall)cCoreAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cEfferentKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Assignment cEfferentAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cEfferentModeletParserRuleCall_6_2_0 = (RuleCall)cEfferentAssignment_6_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_6_3 = (RuleCall)cGroup_6.eContents().get(3);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cAfferentKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cBEGINTerminalRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Assignment cAfferentAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cAfferentModeletParserRuleCall_7_2_0 = (RuleCall)cAfferentAssignment_7_2.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_7_3 = (RuleCall)cGroup_7.eContents().get(3);
		private final Keyword cMetaKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cMetaAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cMetaMetaParserRuleCall_9_0 = (RuleCall)cMetaAssignment_9.eContents().get(0);
		private final Keyword cCouplingKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cCouplingAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cCouplingCouplingParserRuleCall_11_0 = (RuleCall)cCouplingAssignment_11.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_12 = (RuleCall)cGroup.eContents().get(12);
		
		//CognitiveModule returns CognitiveModule:
		//    {CognitiveModule}
		//    name=EString':'
		//        BEGIN
		//        'core:' core=Core
		//        ('efferent:'
		//          BEGIN
		//          efferent+=Modelet*
		//          END)?
		//        ('afferent:'
		//          BEGIN
		//          afferent+=Modelet*
		//          END)?
		//        'meta:' meta=Meta
		//        'coupling:' coupling=Coupling
		//        END
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//{CognitiveModule}
		//name=EString':'
		//    BEGIN
		//    'core:' core=Core
		//    ('efferent:'
		//      BEGIN
		//      efferent+=Modelet*
		//      END)?
		//    ('afferent:'
		//      BEGIN
		//      afferent+=Modelet*
		//      END)?
		//    'meta:' meta=Meta
		//    'coupling:' coupling=Coupling
		//    END
		public Group getGroup() { return cGroup; }
		
		//{CognitiveModule}
		public Action getCognitiveModuleAction_0() { return cCognitiveModuleAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//'core:'
		public Keyword getCoreKeyword_4() { return cCoreKeyword_4; }
		
		//core=Core
		public Assignment getCoreAssignment_5() { return cCoreAssignment_5; }
		
		//Core
		public RuleCall getCoreCoreParserRuleCall_5_0() { return cCoreCoreParserRuleCall_5_0; }
		
		//('efferent:'
		//  BEGIN
		//  efferent+=Modelet*
		//  END)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'efferent:'
		public Keyword getEfferentKeyword_6_0() { return cEfferentKeyword_6_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_6_1() { return cBEGINTerminalRuleCall_6_1; }
		
		//efferent+=Modelet*
		public Assignment getEfferentAssignment_6_2() { return cEfferentAssignment_6_2; }
		
		//Modelet
		public RuleCall getEfferentModeletParserRuleCall_6_2_0() { return cEfferentModeletParserRuleCall_6_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_6_3() { return cENDTerminalRuleCall_6_3; }
		
		//('afferent:'
		//  BEGIN
		//  afferent+=Modelet*
		//  END)?
		public Group getGroup_7() { return cGroup_7; }
		
		//'afferent:'
		public Keyword getAfferentKeyword_7_0() { return cAfferentKeyword_7_0; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_7_1() { return cBEGINTerminalRuleCall_7_1; }
		
		//afferent+=Modelet*
		public Assignment getAfferentAssignment_7_2() { return cAfferentAssignment_7_2; }
		
		//Modelet
		public RuleCall getAfferentModeletParserRuleCall_7_2_0() { return cAfferentModeletParserRuleCall_7_2_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_7_3() { return cENDTerminalRuleCall_7_3; }
		
		//'meta:'
		public Keyword getMetaKeyword_8() { return cMetaKeyword_8; }
		
		//meta=Meta
		public Assignment getMetaAssignment_9() { return cMetaAssignment_9; }
		
		//Meta
		public RuleCall getMetaMetaParserRuleCall_9_0() { return cMetaMetaParserRuleCall_9_0; }
		
		//'coupling:'
		public Keyword getCouplingKeyword_10() { return cCouplingKeyword_10; }
		
		//coupling=Coupling
		public Assignment getCouplingAssignment_11() { return cCouplingAssignment_11; }
		
		//Coupling
		public RuleCall getCouplingCouplingParserRuleCall_11_0() { return cCouplingCouplingParserRuleCall_11_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_12() { return cENDTerminalRuleCall_12; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////CognitiveModule returns CognitiveModule:
		////    'CognitiveModule'
		////    name=EString
		////    '{'
		////        'core' core=Core
		////        ('efferent' '{' efferent+=Modelet ( "," efferent+=Modelet)* '}' )?
		////        ('afferent' '{' afferent+=Modelet ( "," afferent+=Modelet)* '}' )?
		////        'meta' meta=Meta
		////        'coupling' coupling=Coupling
		////    '}';
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class CoreElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.Core");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCoreAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Core returns Core:
		//    {Core}
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Core}
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Core}
		public Action getCoreAction_0() { return cCoreAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class ModeletElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.Modelet");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cTopicKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cTopicAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTopicEStringParserRuleCall_4_0 = (RuleCall)cTopicAssignment_4.eContents().get(0);
		private final Keyword cTypeKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cTypeAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cTypeEStringParserRuleCall_6_0 = (RuleCall)cTypeAssignment_6.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_7 = (RuleCall)cGroup.eContents().get(7);
		
		//Modelet returns Modelet:
		//    name=EString':'
		//    BEGIN
		//        'topic:' topic=EString
		//        'type:' type=EString
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString':'
		//BEGIN
		//    'topic:' topic=EString
		//    'type:' type=EString
		//END
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//'topic:'
		public Keyword getTopicKeyword_3() { return cTopicKeyword_3; }
		
		//topic=EString
		public Assignment getTopicAssignment_4() { return cTopicAssignment_4; }
		
		//EString
		public RuleCall getTopicEStringParserRuleCall_4_0() { return cTopicEStringParserRuleCall_4_0; }
		
		//'type:'
		public Keyword getTypeKeyword_5() { return cTypeKeyword_5; }
		
		//type=EString
		public Assignment getTypeAssignment_6() { return cTypeAssignment_6; }
		
		//EString
		public RuleCall getTypeEStringParserRuleCall_6_0() { return cTypeEStringParserRuleCall_6_0; }
		
		//END
		public RuleCall getENDTerminalRuleCall_7() { return cENDTerminalRuleCall_7; }
	}
	public class MetaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.Meta");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cMetaAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Meta returns Meta:
		//    {Meta}
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Meta}
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Meta}
		public Action getMetaAction_0() { return cMetaAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	public class CouplingElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.Coupling");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cCouplingAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		
		//Coupling returns Coupling:
		//    {Coupling}
		//    name=EString;
		@Override public ParserRule getRule() { return rule; }
		
		//{Coupling}
		//name=EString
		public Group getGroup() { return cGroup; }
		
		//{Coupling}
		public Action getCouplingAction_0() { return cCouplingAction_0; }
		
		//name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
	}
	
	
	private final CognitiveModuleElements pCognitiveModule;
	private final EStringElements pEString;
	private final CoreElements pCore;
	private final ModeletElements pModelet;
	private final MetaElements pMeta;
	private final CouplingElements pCoupling;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public CogModGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pCognitiveModule = new CognitiveModuleElements();
		this.pEString = new EStringElements();
		this.pCore = new CoreElements();
		this.pModelet = new ModeletElements();
		this.pMeta = new MetaElements();
		this.pCoupling = new CouplingElements();
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "eu.coresense.cognitivemodule.CogMod.END");
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("eu.coresense.cognitivemodule.CogMod".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//CognitiveModule returns CognitiveModule:
	//    {CognitiveModule}
	//    name=EString':'
	//        BEGIN
	//        'core:' core=Core
	//        ('efferent:'
	//          BEGIN
	//          efferent+=Modelet*
	//          END)?
	//        ('afferent:'
	//          BEGIN
	//          afferent+=Modelet*
	//          END)?
	//        'meta:' meta=Meta
	//        'coupling:' coupling=Coupling
	//        END
	//    ;
	public CognitiveModuleElements getCognitiveModuleAccess() {
		return pCognitiveModule;
	}
	
	public ParserRule getCognitiveModuleRule() {
		return getCognitiveModuleAccess().getRule();
	}
	
	////CognitiveModule returns CognitiveModule:
	////    'CognitiveModule'
	////    name=EString
	////    '{'
	////        'core' core=Core
	////        ('efferent' '{' efferent+=Modelet ( "," efferent+=Modelet)* '}' )?
	////        ('afferent' '{' afferent+=Modelet ( "," afferent+=Modelet)* '}' )?
	////        'meta' meta=Meta
	////        'coupling' coupling=Coupling
	////    '}';
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//Core returns Core:
	//    {Core}
	//    name=EString;
	public CoreElements getCoreAccess() {
		return pCore;
	}
	
	public ParserRule getCoreRule() {
		return getCoreAccess().getRule();
	}
	
	//Modelet returns Modelet:
	//    name=EString':'
	//    BEGIN
	//        'topic:' topic=EString
	//        'type:' type=EString
	//    END;
	public ModeletElements getModeletAccess() {
		return pModelet;
	}
	
	public ParserRule getModeletRule() {
		return getModeletAccess().getRule();
	}
	
	//Meta returns Meta:
	//    {Meta}
	//    name=EString;
	public MetaElements getMetaAccess() {
		return pMeta;
	}
	
	public ParserRule getMetaRule() {
		return getMetaAccess().getRule();
	}
	
	//Coupling returns Coupling:
	//    {Coupling}
	//    name=EString;
	public CouplingElements getCouplingAccess() {
		return pCoupling;
	}
	
	public ParserRule getCouplingRule() {
		return getCouplingAccess().getRule();
	}
	
	/////////////////////
	//// YAML format
	/////////////////////
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
